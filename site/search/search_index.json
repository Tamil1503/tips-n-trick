{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Tips-N-Trick BITS 20! This website is to document all tips-n-trick related to Python, DSE course, Exam preparation, AI-ML Libraries etc. Index Home Home - Website Home. Python Python Book Marks - Python BookMarks. Python Quick Help - Python Quick Help. Python Best Practices - Python Best Practices. AI-ML Libraries AI-ML Libraries - AI-ML Libraries Bookmarks Bookmarks - Bookmarks Semester-1 Subjects Github Repos How To? - How to checkin Assignment Code MFDS - GitHub: Mathematical Foundations for Data Science DSAD - GitHub: Data Structures and Algorithms Design COSS - GitHub: Computer Organization and Software Systems DM - GitHub: Data Mining","title":"Welcome"},{"location":"#welcome-to-the-tips-n-trick-bits-20","text":"This website is to document all tips-n-trick related to Python, DSE course, Exam preparation, AI-ML Libraries etc.","title":"Welcome to the Tips-N-Trick BITS 20!"},{"location":"#index","text":"Home Home - Website Home. Python Python Book Marks - Python BookMarks. Python Quick Help - Python Quick Help. Python Best Practices - Python Best Practices. AI-ML Libraries AI-ML Libraries - AI-ML Libraries Bookmarks Bookmarks - Bookmarks Semester-1 Subjects Github Repos How To? - How to checkin Assignment Code MFDS - GitHub: Mathematical Foundations for Data Science DSAD - GitHub: Data Structures and Algorithms Design COSS - GitHub: Computer Organization and Software Systems DM - GitHub: Data Mining","title":"Index"},{"location":"aiml/AIML/","text":"AIML Home","title":"AIML Home"},{"location":"aiml/AIML/#aiml-home","text":"","title":"AIML Home"},{"location":"assignments/AssignmentCode/","text":"Assignment Code Please checkin your assignment code in respective subject GitHub repo. Semester 1 Repository MFDS DSAD COSS DM Guidelines Create a folder (one time) in respective subject repo with convention bitsid_yourname . Example: 2019hc00000_foobar Check in your code inside that. You are free to manage code structure in that folder. It is good that you create subfolder within that to manage different assignments. Please update README.md and write a small description about your checkin.","title":"Assignment Code"},{"location":"assignments/AssignmentCode/#assignment-code","text":"Please checkin your assignment code in respective subject GitHub repo.","title":"Assignment Code"},{"location":"assignments/AssignmentCode/#semester-1-repository","text":"MFDS DSAD COSS DM","title":"Semester 1 Repository"},{"location":"assignments/AssignmentCode/#guidelines","text":"Create a folder (one time) in respective subject repo with convention bitsid_yourname . Example: 2019hc00000_foobar Check in your code inside that. You are free to manage code structure in that folder. It is good that you create subfolder within that to manage different assignments. Please update README.md and write a small description about your checkin.","title":"Guidelines"},{"location":"bookmarks/BITSLink/","text":"BITS Link BITS Official Portals Canvas e-Learn Portal e-Library Impartus","title":"BITS Link"},{"location":"bookmarks/BITSLink/#bits-link","text":"","title":"BITS Link"},{"location":"bookmarks/BITSLink/#bits-official-portals","text":"Canvas e-Learn Portal e-Library Impartus","title":"BITS Official Portals"},{"location":"bookmarks/Bookmarks/","text":"Bookmarks Python BookMarks - Python BookMarks. BITS Official Links - BITS Official Links","title":"Bookmarks"},{"location":"bookmarks/Bookmarks/#bookmarks","text":"Python BookMarks - Python BookMarks. BITS Official Links - BITS Official Links","title":"Bookmarks"},{"location":"python/PythonBestPractices/","text":"Python Best Practices","title":"Python Best Practices"},{"location":"python/PythonBestPractices/#python-best-practices","text":"","title":"Python Best Practices"},{"location":"python/PythonBookMarks/","text":"Python Bookmarks Awesome Python - A curated list of awesome Python frameworks, libraries, software and resources. Learn Python The Hard Way Google Python Introduction Variables and Datatypes Powerful Python One-Liners Google Python Style Guide Python OOPS","title":"Python Bookmarks"},{"location":"python/PythonBookMarks/#python-bookmarks","text":"Awesome Python - A curated list of awesome Python frameworks, libraries, software and resources. Learn Python The Hard Way Google Python Introduction Variables and Datatypes Powerful Python One-Liners Google Python Style Guide Python OOPS","title":"Python Bookmarks"},{"location":"python/PythonHome/","text":"Python Home All things related to Python. Python Book Marks - Python BookMarks. Python Quick Help - Python Quick Help. Python Best Practices - Python Best Practices.","title":"Python Home"},{"location":"python/PythonHome/#python-home","text":"All things related to Python. Python Book Marks - Python BookMarks. Python Quick Help - Python Quick Help. Python Best Practices - Python Best Practices.","title":"Python Home"},{"location":"python/PythonQuickHelp/","text":"Python Quick Help Sort a dict sorted ( dict_name , key = lambda row : ( row [ dob ], row [ salary ], row [ height ]), reverse = False ) where dict_name is name of the dictionary and sorting filter is applied on dob , then salary , then height Make api calls using passphrase for PEM file with Python SSLContext import requests import ssl from ssl import SSLContext import http import json context = ssl . SSLContext ( ssl . PROTOCOL_TLSv1_2 ) context . load_cert_chain ( certfile = path to pem file containing private key , password = ****** ) context . load_verify_locations ( cafile = path to ca certfile ) context . verify_mode = ssl . CERT_REQUIRED context . check_hostname = True connection = http . client . HTTPSConnection ( www.google.com , 443 , context = context ) connection . request ( GET , /api path/ ) #e.g: connection.request( GET , /applications/ ) response = connection . getresponse () data = response . read () . decode ( utf-8 ) print ( data ) json_obj = json . loads ( data ) print ( json_obj ) connection . close () Catch all Exceptions of a Module Considering requests as module and if we want to catch all possible exception of this module with out using broader except: , please use below code snippet. # This will inspect and get all members of Exception class in request module import inspect # import the module which you want to use. Example: requests import requests # Get all requests exception class from requests which are subclass of Exception exception_types = [ obj for name , obj in inspect . getmembers ( jsonschema . exceptions ) if inspect . isclass ( obj ) and issubclass ( obj , Exception )] try : requests . get ( url ) except Exception as e : if any ( issubclass ( e . __class__ , lv ) for lv in exception_types ): print ( str ( e )) else : print ( Not an requests exceptions. ) raise Fix [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (ssl.c:726) Please add below to bypass import ssl ssl . _create_default_https_context = ssl . _create_unverified_context or update certifi In Mac, to update certifi, run below commands [Applicable if Python was installed using official package from python.org] /Applications/Python\\ 3.6/Install\\ Certificates.command /Applications/Python\\ 2.7/Install\\ Certificates.command","title":"Python Quick Help"},{"location":"python/PythonQuickHelp/#python-quick-help","text":"","title":"Python Quick Help"},{"location":"python/PythonQuickHelp/#sort-a-dict","text":"sorted ( dict_name , key = lambda row : ( row [ dob ], row [ salary ], row [ height ]), reverse = False ) where dict_name is name of the dictionary and sorting filter is applied on dob , then salary , then height","title":"Sort a dict"},{"location":"python/PythonQuickHelp/#make-api-calls-using-passphrase-for-pem-file-with-python-sslcontext","text":"import requests import ssl from ssl import SSLContext import http import json context = ssl . SSLContext ( ssl . PROTOCOL_TLSv1_2 ) context . load_cert_chain ( certfile = path to pem file containing private key , password = ****** ) context . load_verify_locations ( cafile = path to ca certfile ) context . verify_mode = ssl . CERT_REQUIRED context . check_hostname = True connection = http . client . HTTPSConnection ( www.google.com , 443 , context = context ) connection . request ( GET , /api path/ ) #e.g: connection.request( GET , /applications/ ) response = connection . getresponse () data = response . read () . decode ( utf-8 ) print ( data ) json_obj = json . loads ( data ) print ( json_obj ) connection . close ()","title":"Make api calls using passphrase for PEM file with Python SSLContext"},{"location":"python/PythonQuickHelp/#catch-all-exceptions-of-a-module","text":"Considering requests as module and if we want to catch all possible exception of this module with out using broader except: , please use below code snippet. # This will inspect and get all members of Exception class in request module import inspect # import the module which you want to use. Example: requests import requests # Get all requests exception class from requests which are subclass of Exception exception_types = [ obj for name , obj in inspect . getmembers ( jsonschema . exceptions ) if inspect . isclass ( obj ) and issubclass ( obj , Exception )] try : requests . get ( url ) except Exception as e : if any ( issubclass ( e . __class__ , lv ) for lv in exception_types ): print ( str ( e )) else : print ( Not an requests exceptions. ) raise","title":"Catch all Exceptions of a Module"},{"location":"python/PythonQuickHelp/#fix-ssl-certificate_verify_failed-certificate-verify-failed-sslc726","text":"Please add below to bypass import ssl ssl . _create_default_https_context = ssl . _create_unverified_context or update certifi In Mac, to update certifi, run below commands [Applicable if Python was installed using official package from python.org] /Applications/Python\\ 3.6/Install\\ Certificates.command /Applications/Python\\ 2.7/Install\\ Certificates.command","title":"Fix [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (ssl.c:726)"},{"location":"support/AccessForm/","text":"Access Form Request Access to BITS20 Github Org Please fill the below form. Admin will be approving your request in next 1 working day. Once your request is approved, you will get an Email from Github to accept the invitation to be added to BITS20 Org . Loading\u2026","title":"Access Form"},{"location":"support/AccessForm/#access-form","text":"","title":"Access Form"},{"location":"support/AccessForm/#request-access-to-bits20-github-org","text":"Please fill the below form. Admin will be approving your request in next 1 working day. Once your request is approved, you will get an Email from Github to accept the invitation to be added to BITS20 Org . Loading\u2026","title":"Request Access to BITS20 Github Org"},{"location":"support/HowToContribute/","text":"How to Contribute Please click here to request access to BITS20 Org Fast and Quick Fix For short fix to this website, you can click on pencil icon and edit. Please make sure you are not in master branch when sending PR. Recommended Approach Steps to contribute: Fork tips-n-trick repository into your account on Github or create a branch. Clone your forked repository or checkout the newly created branch. Edit or Add New Page Test it Create a pull request for review to request merge on tips-n-trick repo. Thank you for your contribution! Detailed Steps Pre-Requisite Python3.6+ Make Install virtualenv python3 -m pip install virtualenv Run Make file to create virtualenv make install Testing Locally Run webserver locally and test your changes. make test Open Local Webserver to view changes. You can have webserver running while make changes to files. Changes are automatically reloaded. Ready for PR Once all things verified, please send a PR.","title":"How to Contribute"},{"location":"support/HowToContribute/#how-to-contribute","text":"Please click here to request access to BITS20 Org","title":"How to Contribute"},{"location":"support/HowToContribute/#fast-and-quick-fix","text":"For short fix to this website, you can click on pencil icon and edit. Please make sure you are not in master branch when sending PR.","title":"Fast and Quick Fix"},{"location":"support/HowToContribute/#recommended-approach","text":"Steps to contribute: Fork tips-n-trick repository into your account on Github or create a branch. Clone your forked repository or checkout the newly created branch. Edit or Add New Page Test it Create a pull request for review to request merge on tips-n-trick repo. Thank you for your contribution!","title":"Recommended Approach"},{"location":"support/HowToContribute/#detailed-steps","text":"","title":"Detailed Steps"},{"location":"support/HowToContribute/#pre-requisite","text":"Python3.6+ Make Install virtualenv python3 -m pip install virtualenv Run Make file to create virtualenv make install","title":"Pre-Requisite"},{"location":"support/HowToContribute/#testing-locally","text":"Run webserver locally and test your changes. make test Open Local Webserver to view changes. You can have webserver running while make changes to files. Changes are automatically reloaded.","title":"Testing Locally"},{"location":"support/HowToContribute/#ready-for-pr","text":"Once all things verified, please send a PR.","title":"Ready for PR"},{"location":"support/Support/","text":"Support and FAQ's Contribution Contribution - Contribution Request Access Request Access for BITS20 Github Org","title":"Support and FAQ's"},{"location":"support/Support/#support-and-faqs","text":"Contribution Contribution - Contribution Request Access Request Access for BITS20 Github Org","title":"Support and FAQ's"}]}